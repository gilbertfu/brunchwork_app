Evan
week 1/26 - 1/31
    - call eventbrite api on regular schedule (< 5000 times a day)
      (https://www.ruby-toolbox.com/categories/scheduling)
      (https://rubygems.org/gems/whenever)
      - save all modified/ new events in our db
        (https://developer.eventbrite.com/docs/event-search/)
        - if can't see sold-out events, use this:
          (http://developer.eventbrite.com/docs/user-owned-events/)
        -event search by event organizer
        - check date_modified.range_start
        - check date_modified.range_end
        - check since_id
      - save all new attending users for upcoming events
        (https://developer.eventbrite.com/docs/event-attendees/)
        - check order_by
      - display events directly from our own db
      - display users' attending list directly from our own db
        

2/1-2/7
- finish invite code
  - hash email+"brunchwork" % 6 characters
  - send email to founders@brunchwork.com
  - either create a page for Pauline/Paulina to send out users' invite code or have them manually send the email with the code



Gilbert

Next Phase
- linkedin/facebook api
- carousal for both events on home page and blog pictures
- analytics for the site
- clean up front end bs
- mobile



#=============================
#
#   Secure Events Implementation Plan
#
#=============================

- create Event model
  - model should have:
    -t.string   "title"
    -t.string   "about"
    -t.string   "event_type"
    -t.string   "location"
    -t.datetime "date_time"
    -t.datetime "created_at"
    -t.datetime "updated_at"
    -t.string   "image"
    -t.string   "status"
    -t.integer  "attendees"
    -t.integer  "max_attendees"
    -t.string   "link"
  - Event should have many users
  - users should have many events
  
- write controller for Events (method for populating events model)
  -use httparty gem to call EventBrite API
  (http://www.rubydoc.info/gems/httparty/0.13.3)
  - get JSON from EventBrite
  - populate event model with JSON fields
  - CHECK EVENTBRITE API FOR HOW TO ONLY GET UNSYNCED DATA
  - METHODS:
    - index: display events in descending
      - //TODO: should we have separate page for past events? 
      - //TODO: display by month? 
    - edit: get which event u want to edit
    - update: decide what to do upon successful edit
    - create: check all params are there and create
    - sync: THIS IS THE MAIN METHOD
      - get json using httparty
      - parse json
        - if event is updated, edit it
        - if new event is created, create it
  
- Write views for Events ( rails/AJAX to show events from OUR db)
  - 



